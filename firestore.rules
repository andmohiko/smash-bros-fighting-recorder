rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write;
    // }
    function requestData() {
      return request.resource.data;
    }
    function isSignedIn() {
      return request.auth.uid != null;
    }
    function isUser(userId) {
      return request.auth.uid == userId;
    }
    match /authUsers/{authId} {
      allow read;
      allow create: if isSignedIn()
      								&& isUser(authId)
      								&& 'createdAt' in requestData() && requestData().createdAt is timestamp
                      && 'userId' in requestData() && requestData().userId is string
                      && 'loginMethod' in requestData() && requestData().loginMethod is string;
    }
    match /users/{userId} {
      allow read;
      allow create: if isSignedIn()
      								&& 'createdAt' in requestData() && requestData().createdAt is timestamp
                      && 'updatedAt' in requestData() && requestData().updatedAt is timestamp
                      && 'authId' in requestData() && requestData().authId is string
                      && 'userOriginalId' in requestData() && requestData().userOriginalId is string
                      && 'username' in requestData() && requestData().username is string;
      allow update: if isSignedIn()
      								&& 'updatedAt' in requestData() && requestData().updatedAt is timestamp;
    }
    match /records/{recordId} {
      allow read;
    	allow create: if isSignedIn()
                      && 'createdAt' in requestData() && requestData().createdAt is timestamp
                      && 'updatedAt' in requestData() && requestData().updatedAt is timestamp
                      && 'userId' in requestData() && requestData().userId is string
                      && 'userOriginalId' in requestData() && requestData().userOriginalId is string
                      && 'fighter' in requestData() && requestData().fighter is string
                      && 'fighterId' in requestData() && requestData().fighterId is string
                      && 'opponent' in requestData() && requestData().opponent is string
                      && 'opponentId' in requestData() && requestData().opponentId is string
                      && 'result' in requestData() && requestData().result is bool;
      allow update: if isSignedIn()
                      && 'updatedAt' in requestData() && requestData().updatedAt is timestamp
                      && 'fighter' in requestData() && requestData().fighter is string
                      && 'fighterId' in requestData() && requestData().fighterId is string
                      && 'opponent' in requestData() && requestData().opponent is string
                      && 'opponentId' in requestData() && requestData().opponentId is string
                      && 'result' in requestData() && requestData().result is bool;
      allow delete: if isSignedIn();
    }
  }
}